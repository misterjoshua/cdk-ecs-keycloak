// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fargate 1`] = `
Object {
  "Outputs": Object {
    "RdsEndpoint": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "DB4924F778",
          "Endpoint.Address",
        ],
      },
    },
    "RdsSecret": Object {
      "Value": Object {
        "Fn::Select": Array [
          6,
          Object {
            "Fn::Split": Array [
              ":",
              Object {
                "Ref": "DBSecretB8D1B379",
              },
            ],
          },
        ],
      },
    },
    "ServiceLoadBalancerDNSEC5B149E": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "ServiceLBE9A1ADBC",
          "DNSName",
        ],
      },
    },
    "ServiceServiceURL250C0FB6": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "http://",
            Object {
              "Fn::GetAtt": Array [
                "ServiceLBE9A1ADBC",
                "DNSName",
              ],
            },
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "ClusterDefaultServiceDiscoveryNamespaceC336F9B4": Object {
      "Properties": Object {
        "Name": "integ-fargate-stack",
        "Vpc": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
    },
    "ClusterEB0386A7": Object {
      "Properties": Object {
        "CapacityProviders": Array [
          "FARGATE",
          "FARGATE_SPOT",
        ],
        "DefaultCapacityProviderStrategy": Array [
          Object {
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 1,
          },
          Object {
            "CapacityProvider": "FARGATE",
            "Weight": 10,
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "DB4924F778": Object {
      "Properties": Object {
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t2.micro",
        "DBSubnetGroupName": Object {
          "Ref": "DBSubnetGroupAE8F8683",
        },
        "Engine": "mysql",
        "EngineVersion": "8.0",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "DBSecretB8D1B379",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "DBSecretB8D1B379",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "PubliclyAccessible": true,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "DBSecurityGroup302CDD63",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "DBSecretAttachment1CF7DE47": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "DBSecretB8D1B379",
        },
        "TargetId": Object {
          "Ref": "DB4924F778",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "DBSecretB8D1B379": Object {
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
    },
    "DBSecurityGroup302CDD63": Object {
      "Properties": Object {
        "GroupDescription": "Security group for DB database",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DBSecurityGroupfromintegfargateServiceSecurityGroup9EB23104IndirectPort6B16E572": Object {
      "Properties": Object {
        "Description": "from integfargateServiceSecurityGroup9EB23104:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "DB4924F778",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "DBSecurityGroup302CDD63",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "ServiceSecurityGroupEEA09B68",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "DB4924F778",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DBSubnetGroupAE8F8683": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for DB database",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcpublicSubnet1Subnet2BB74ED7",
          },
          Object {
            "Ref": "VpcpublicSubnet2SubnetE34B022A",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "Service9571FDD8": Object {
      "DependsOn": Array [
        "ServiceLBPublicListenerECSGroup0CC8688C",
        "ServiceLBPublicListener46709EAA",
      ],
      "Properties": Object {
        "CapacityProviderStrategy": Array [
          Object {
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 1,
          },
          Object {
            "CapacityProvider": "FARGATE",
            "Weight": 10,
          },
        ],
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 300,
        "LoadBalancers": Array [
          Object {
            "ContainerName": "keycloak",
            "ContainerPort": 8080,
            "TargetGroupArn": Object {
              "Ref": "ServiceLBPublicListenerECSGroup0CC8688C",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "ServiceSecurityGroupEEA09B68",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VpcpublicSubnet1Subnet2BB74ED7",
              },
              Object {
                "Ref": "VpcpublicSubnet2SubnetE34B022A",
              },
            ],
          },
        },
        "PlatformVersion": "1.4.0",
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "keycloak",
            "ContainerPort": 8080,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "ServiceCloudmapServiceDE76B29D",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "integfargateFAC1B48C",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ServiceCloudmapServiceDE76B29D": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 60,
              "Type": "SRV",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 1,
        },
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "ServiceLBE9A1ADBC": Object {
      "DependsOn": Array [
        "VpcpublicSubnet1DefaultRouteB88F9E93",
        "VpcpublicSubnet2DefaultRoute732F0BEB",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "ServiceLBSecurityGroupF7435A5C",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Ref": "VpcpublicSubnet1Subnet2BB74ED7",
          },
          Object {
            "Ref": "VpcpublicSubnet2SubnetE34B022A",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "ServiceLBPublicListener46709EAA": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "ServiceLBPublicListenerECSGroup0CC8688C",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "ServiceLBE9A1ADBC",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ServiceLBPublicListenerECSGroup0CC8688C": Object {
      "Properties": Object {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "ServiceLBSecurityGroupF7435A5C": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB integfargateServiceLB84FABA5B",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ServiceLBSecurityGrouptointegfargateServiceSecurityGroup9EB231048080EDAD8D04": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "ServiceSecurityGroupEEA09B68",
            "GroupId",
          ],
        },
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "ServiceLBSecurityGroupF7435A5C",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ServiceSecurityGroupEEA09B68": Object {
      "Properties": Object {
        "GroupDescription": "integ-fargate/Service/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ServiceSecurityGroupfromintegfargateServiceLBSecurityGroupC37D3C318080548BC1ED": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "ServiceSecurityGroupEEA09B68",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "ServiceLBSecurityGroupF7435A5C",
            "GroupId",
          ],
        },
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-fargate/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-fargate/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VpcpublicSubnet1DefaultRouteB88F9E93": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcpublicSubnet1RouteTable15C15F8E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcpublicSubnet1RouteTable15C15F8E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-fargate/Vpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcpublicSubnet1RouteTableAssociation4E83B6E4": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcpublicSubnet1RouteTable15C15F8E",
        },
        "SubnetId": Object {
          "Ref": "VpcpublicSubnet1Subnet2BB74ED7",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcpublicSubnet1Subnet2BB74ED7": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/22",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "integ-fargate/Vpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcpublicSubnet2DefaultRoute732F0BEB": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcpublicSubnet2RouteTableC5A6DF77",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcpublicSubnet2RouteTableAssociationCCE257FF": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcpublicSubnet2RouteTableC5A6DF77",
        },
        "SubnetId": Object {
          "Ref": "VpcpublicSubnet2SubnetE34B022A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcpublicSubnet2RouteTableC5A6DF77": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-fargate/Vpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcpublicSubnet2SubnetE34B022A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.4.0/22",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "integ-fargate/Vpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "integfargateExecutionRoleC3F3F2D0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "integfargateExecutionRoleDefaultPolicyCB89173B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "integfargatekeycloakLogGroup9E142BE1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DBSecretAttachment1CF7DE47",
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "integfargateensuremysqldatabaseLogGroup2172258A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "integfargateExecutionRoleDefaultPolicyCB89173B",
        "Roles": Array [
          Object {
            "Ref": "integfargateExecutionRoleC3F3F2D0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "integfargateFAC1B48C": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "DependsOn": Array [
              Object {
                "Condition": "COMPLETE",
                "ContainerName": "ensure-mysql-database",
              },
            ],
            "Environment": Array [
              Object {
                "Name": "KEYCLOAK_USER",
                "Value": "admin",
              },
              Object {
                "Name": "KEYCLOAK_PASSWORD",
                "Value": "admin",
              },
              Object {
                "Name": "DB_VENDOR",
                "Value": "mysql",
              },
              Object {
                "Name": "DB_NAME",
                "Value": "keycloak",
              },
              Object {
                "Name": "JGROUPS_DISCOVERY_PROTOCOL",
                "Value": "dns.DNS_PING",
              },
              Object {
                "Name": "JGROUPS_DISCOVERY_PROPERTIES",
                "Value": Object {
                  "Fn::Sub": Array [
                    "dns_query=\${ServiceName}.\${ServiceNamespace},dns_record_type=\${QueryType}",
                    Object {
                      "QueryType": "SRV",
                      "ServiceName": Object {
                        "Fn::GetAtt": Array [
                          "ServiceCloudmapServiceDE76B29D",
                          "Name",
                        ],
                      },
                      "ServiceNamespace": "integ-fargate-stack",
                    },
                  ],
                },
              },
            ],
            "Essential": true,
            "Image": "jboss/keycloak",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "integfargatekeycloakLogGroup9E142BE1",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "/cdk-ecs-keycloak",
              },
            },
            "Name": "keycloak",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8080,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "DB_ADDR",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DBSecretAttachment1CF7DE47",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DBSecretAttachment1CF7DE47",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DBSecretAttachment1CF7DE47",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DBSecretAttachment1CF7DE47",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          Object {
            "Command": Array [
              "sh",
              "-c",
              "mysql -u\\"$DB_USER\\" -p\\"$DB_PASSWORD\\" -h\\"$DB_ADDR\\" -e \\"CREATE DATABASE IF NOT EXISTS $DB_NAME\\"",
            ],
            "Environment": Array [
              Object {
                "Name": "DB_NAME",
                "Value": "keycloak",
              },
            ],
            "Essential": false,
            "Image": "mysql",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "integfargateensuremysqldatabaseLogGroup2172258A",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "/cdk-ecs-keycloak",
              },
            },
            "Name": "ensure-mysql-database",
            "Secrets": Array [
              Object {
                "Name": "DB_ADDR",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DBSecretAttachment1CF7DE47",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DBSecretAttachment1CF7DE47",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DBSecretAttachment1CF7DE47",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DBSecretAttachment1CF7DE47",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "integfargateExecutionRoleC3F3F2D0",
            "Arn",
          ],
        },
        "Family": "integfargateE6A3C0D3",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "integfargateTaskRole75607805",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "integfargateTaskRole75607805": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "integfargateensuremysqldatabaseLogGroup2172258A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "integfargatekeycloakLogGroup9E142BE1": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;
